        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Card test for adventurer
        -:    2:
        -:    3:#include "dominion.h"
        -:    4:#include <stdio.h>
        -:    5://Function to tell me if the test passed or failed
        1:    6:void Pass_Fail(int check)
        -:    7:{
        1:    8:	if (check != 0 )
        -:    9:	{
    #####:   10:	printf("\n TEST FAILED!\n");
        -:   11:	}	
        -:   12:	else 
        1:   13:	printf("\n TEST WAS SUCCESFUL!\n");
        -:   14:
        1:   15:}
        -:   16://unit test function for the adventurer card
        1:   17:void adventur()
        -:   18:{
        -:   19://random seed
        1:   20:int seed = 500;
        -:   21:struct gameState game;
        -:   22://Cards needed for initialization
        1:   23:int cards[27] = {curse, estate, duchy, province, copper, silver, gold, adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall, minion, steward, tribute, ambassador, cutpurse, embargo, outpost, salvager, sea_hag, treasure_map};
        -:   24:
        -:   25://Initialize the game
        1:   26:initializeGame(2, cards, seed, &game);
        -:   27:int temphand[500];
        1:   28:printf("\n\nCARD TEST 1 ADVENTURER--------------------------------------------------------------\n\n");
        -:   29:
        -:   30://Temps to hold hanc count and treasure count
        -:   31:int temp1;
        -:   32:int temp2;
        1:   33:int treasure = 0;
        -:   34:
        -:   35://Show the current hand count so you can see if it increases by 1
        1:   36:printf("\nChecking current hand count to see if it will increase by 1 and the treasure count by 1 once the adventure card is played:\n");
        -:   37://Check the current amount of hand count and treasure count and set them to temps for comparison later.
        1:   38:temp1 = game.handCount[1];
        1:   39:temp2 = treasure;
        1:   40:printf("\n Current hand count %d\n", game.handCount[1]);
        1:   41:printf(" Current treasure count %d\n", treasure);
        -:   42://Start by checking to see if the adventurer card ran all the way through.
        1:   43:printf("\nChecking to see if the adventurer card runs succesfully:\n");
        1:   44:int rand = adventurer_func(&treasure, &game, 1, 0, temphand, 0);
        -:   45://Check if the run was succesful
        1:   46:Pass_Fail(rand);
        -:   47://Check to see what the new hand count and treasure count are.
        1:   48:printf("\nChecking to see if current hand count has increased by 1 as well as treasure:\n");
        1:   49:printf("\n Current hand count %d\n", game.handCount[1]);
        1:   50:printf(" Current treasure count %d\n", treasure);
        -:   51:
        -:   52://Use the previous values set in temps to compare with the new value and check if they are correct, if they arent print an error.
        1:   53:if(treasure > temp2+1)
        -:   54:{
        1:   55:	printf(" FAIL TREASURE COUNT IS TOO HIGH!\n");
        -:   56:}
        1:   57:if(game.handCount[1] > temp1+1)
        -:   58:{
    #####:   59:	printf("FAIL HAND COUNT IS TOO HIGH!\n");
        -:   60:}
        -:   61:
        1:   62:printf("\n\nCARD TEST 1 ADVENTURER---------------------------------------------------------------\n");
        1:   63:}
        -:   64:
        1:   65:int main()
        -:   66:{
        1:   67:adventur();
        1:   68:return 0;
        -:   69:}
