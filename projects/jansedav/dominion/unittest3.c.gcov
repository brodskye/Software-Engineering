        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://Unit Test for End Turn function
        -:    2:
        -:    3:#include "dominion.h"
        -:    4:#include <stdio.h>
        -:    5:
        -:    6://Function to test if the end turn function in dominion.c works properly
        1:    7:void End_Turn()
        -:    8:{
        -:    9:struct gameState game;
        1:   10:int seed = 100;
        -:   11://Get all the cards in the deck that are possible
        1:   12:int cards[27] = {curse, estate, duchy, province, copper, silver, gold, adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall, minion, steward, tribute, ambassador, cutpurse, embargo, outpost, salvager, sea_hag, treasure_map};
        -:   13:
        -:   14://Initialize the game
        1:   15:initializeGame(2, cards, seed, &game);
        -:   16:
        1:   17:printf("\n\n UNIT TEST 3 ENDTURN-----------------------------------------------------\n\n");
        -:   18:int i;
        -:   19:
        -:   20:		//Run each test a couple times to make sure the results are correct
        3:   21:		for(i = 0; i < 2; i++)
        -:   22:		{
        -:   23:			//Check to see which player you are on and if it is correct and end their turn
        2:   24:			int who = whoseTurn(&game);
        2:   25:			int	who2 = who+1;
        2:   26:			printf("Checking to see if it is Player 1's turn and ending the turn:\n");
        2:   27:			printf(" The current player that is up for their turn is: %d\n\n", who2);
        -:   28:		//Check to see if the player is correctly player 1.
        2:   29:			if(who2 != 1)
        -:   30:			{
    #####:   31:			printf(" FAILED\n");
        -:   32:			}
        -:   33:			else
        2:   34:			printf(" SUCCESS\n");
        2:   35:			endTurn(&game);
        -:   36:			//Make sure the new player is the correct player after the last turn was ended and then end their turn
        2:   37:			who = whoseTurn(&game);
        2:   38:			printf("Checking to see if it is Player 2's turn and ending the turn:\n");
        2:   39:			who2 = who+1;
        2:   40:			printf(" The current player that is up for their turn is: %d\n\n", who2);
        -:   41:		//Check to see if the player is now player 2
        2:   42:			if(who2 != 2)
        -:   43:			{
    #####:   44:			printf(" FAILED\n");
        -:   45:			}
        -:   46:			else
        2:   47:			printf(" SUCCESS\n");
        2:   48:			endTurn(&game);
        -:   49:
        -:   50:		}	
        1:   51:printf("UNIT TEST 3 ENDTURN DONE---------------------------------------------------------\n");
        1:   52:}
        -:   53:
        1:   54:int main()
        -:   55:{
        1:   56:End_Turn();
        1:   57:return 0;
        -:   58:}
        -:   59:
