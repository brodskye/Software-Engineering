        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://Unit test to check is the game is over
        -:    2:
        -:    3:#include "dominion.h"
        -:    4:#include <stdio.h>
        -:    5:
        -:    6://Function that tells me if the game is over or not
        3:    7:void Pass_Fail(int check)
        -:    8:{
        3:    9:if(check == 1)
        2:   10:printf("\n The game HAS ended!\n\n");
        -:   11:else
        1:   12:printf("\n The game has NOT ended!\n");
        3:   13:}
        -:   14:
        -:   15:
        1:   16:void Game_Over()
        -:   17:{
        1:   18:printf("\n\nUNIT TEST 4 GAMEOVER---------------------\n\n");
        -:   19:struct gameState game;
        -:   20://random seed
        1:   21:int seed = 100;
        -:   22://All the cards in the deck that I need for initialization of the game
        1:   23:int cards[27] = {curse, estate, duchy, province, copper, silver, gold, adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall, minion, steward, tribute, ambassador, cutpurse, embargo, outpost, salvager, sea_hag, treasure_map};
        -:   24://Initialize the game
        1:   25:initializeGame(2, cards, seed, &game);
        -:   26:
        -:   27://Checking to see if the game will properly end when there are no more province cards left
        1:   28:printf("Checking to see if the game will end when the supply count of province is at 0:\n");
        1:   29:game.supplyCount[province] = 0;
        1:   30:int rand = isGameOver(&game);
        1:   31:Pass_Fail(rand);
        -:   32:
        -:   33:
        -:   34://Checking to see if the game will properly end when 3 supply piles of cards have ran out.
        1:   35:printf("Checking to see if the game will end when the supply count of 3 supply piles are at 0:\n");
        1:   36:game.supplyCount[province] = 10;
        1:   37:game.supplyCount[5] = 0;
        1:   38:game.supplyCount[6] = 0;
        1:   39:game.supplyCount[7] = 0;
        1:   40:rand = isGameOver(&game);
        1:   41:Pass_Fail(rand);
        -:   42:
        -:   43://Checking to see if the game will not end when neither of the two above conditions are met.
        1:   44:printf("Checking to see if the game will not end when neither the province count is at 0 and there are not 3 supply with 0 count: \n");
        1:   45:game.supplyCount[5] = 5;
        1:   46:game.supplyCount[6] = 5;
        1:   47:game.supplyCount[7] = 5;
        1:   48:rand = isGameOver(&game);
        1:   49:Pass_Fail(rand);
        -:   50:
        -:   51:
        -:   52:
        1:   53:printf("\n\nUNIT TEST 4 GAMEOVER DONE-----------------\n\n");
        1:   54:}
        -:   55:
        1:   56:int main()
        -:   57:{
        1:   58:Game_Over();
        1:   59:return 0;
        -:   60:}
